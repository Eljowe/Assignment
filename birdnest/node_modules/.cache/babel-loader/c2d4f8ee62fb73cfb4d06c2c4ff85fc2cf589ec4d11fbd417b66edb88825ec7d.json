{"ast":null,"code":"var _jsxFileName = \"C:\\\\Koodi\\\\Reaktor\\\\Reaktor\\\\birdnest\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport DroneService from \"./services/DroneService\";\nimport XMLParser from 'react-xml-parser';\nimport ListComponent from \"./components/ListDrones\";\nimport FilterByDistance from \"./components/FilterByDistance\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [droneData, setDroneData] = useState('');\n  const [insideNDZ, setInsideNDZ] = useState({});\n  const [time, setTime] = useState();\n  useEffect(() => {\n    const updateDroneData = setInterval(() => {\n      DroneService.DroneData().then(response => {\n        var xml = new XMLParser().parseFromString(response); //Response XML-data to array\n        setDroneData(xml.children['1'].children); //set list of drones to variable\n        setTime(xml.children['1'].attributes.snapshotTimestamp);\n        setInsideNDZ(FilterByDistance.FilterInsideNDZ(xml.children['1'].children)); //List of drones inside 100m range\n      });\n    }, 2000); //Loop every 2 seconds to fetch current drone positions\n    return () => {\n      clearInterval(updateDroneData);\n    };\n  }, []);\n  DroneService.DroneDataObject(insideNDZ);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Time: \", time]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Drones:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListComponent, {\n      droneData: droneData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Inside NDZ:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListComponent, {\n      droneData: insideNDZ\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QRCYYPn2gIbui25XcnYpFNbB6bQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","DroneService","XMLParser","ListComponent","FilterByDistance","App","droneData","setDroneData","insideNDZ","setInsideNDZ","time","setTime","updateDroneData","setInterval","DroneData","then","response","xml","parseFromString","children","attributes","snapshotTimestamp","FilterInsideNDZ","clearInterval","DroneDataObject"],"sources":["C:/Koodi/Reaktor/Reaktor/birdnest/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from 'axios'\nimport DroneService from \"./services/DroneService\";\nimport XMLParser from 'react-xml-parser';\nimport ListComponent from \"./components/ListDrones\";\nimport FilterByDistance from \"./components/FilterByDistance\";\n\nfunction App() {\n  const [droneData, setDroneData] = useState('');\n  const [insideNDZ, setInsideNDZ] = useState({});\n  const [time, setTime] = useState();\n\n  useEffect(() => {\n    const updateDroneData = setInterval(()=> {\n      DroneService.DroneData().then(response => {\n        var xml = new XMLParser().parseFromString(response) //Response XML-data to array\n        setDroneData(xml.children['1'].children) //set list of drones to variable\n        setTime(xml.children['1'].attributes.snapshotTimestamp)\n        setInsideNDZ(FilterByDistance.FilterInsideNDZ(xml.children['1'].children)) //List of drones inside 100m range\n      })\n    }, 2000); //Loop every 2 seconds to fetch current drone positions\n    return () => {\n    clearInterval(updateDroneData);\n    };\n  }, []);\n  DroneService.DroneDataObject(insideNDZ);\n  return (\n    <div>\n      <p>Time: {time}</p>\n      <p>Drones:</p>\n      <ListComponent droneData={droneData}/>\n      <p>Inside NDZ:</p>\n      <ListComponent droneData={insideNDZ} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,yBAAyB;AAClD,OAAOC,SAAS,MAAM,kBAAkB;AACxC,OAAOC,aAAa,MAAM,yBAAyB;AACnD,OAAOC,gBAAgB,MAAM,+BAA+B;AAAC;AAE7D,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,EAAE;EAElCD,SAAS,CAAC,MAAM;IACd,MAAMc,eAAe,GAAGC,WAAW,CAAC,MAAK;MACvCZ,YAAY,CAACa,SAAS,EAAE,CAACC,IAAI,CAACC,QAAQ,IAAI;QACxC,IAAIC,GAAG,GAAG,IAAIf,SAAS,EAAE,CAACgB,eAAe,CAACF,QAAQ,CAAC,EAAC;QACpDT,YAAY,CAACU,GAAG,CAACE,QAAQ,CAAC,GAAG,CAAC,CAACA,QAAQ,CAAC,EAAC;QACzCR,OAAO,CAACM,GAAG,CAACE,QAAQ,CAAC,GAAG,CAAC,CAACC,UAAU,CAACC,iBAAiB,CAAC;QACvDZ,YAAY,CAACL,gBAAgB,CAACkB,eAAe,CAACL,GAAG,CAACE,QAAQ,CAAC,GAAG,CAAC,CAACA,QAAQ,CAAC,CAAC,EAAC;MAC7E,CAAC,CAAC;IACJ,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IACV,OAAO,MAAM;MACbI,aAAa,CAACX,eAAe,CAAC;IAC9B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EACNX,YAAY,CAACuB,eAAe,CAAChB,SAAS,CAAC;EACvC,oBACE;IAAA,wBACE;MAAA,qBAAUE,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eACnB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAc,eACd,QAAC,aAAa;MAAC,SAAS,EAAEJ;IAAU;MAAA;MAAA;MAAA;IAAA,QAAE,eACtC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAkB,eAClB,QAAC,aAAa;MAAC,SAAS,EAAEE;IAAU;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACnC;AAEV;AAAC,GA5BQH,GAAG;AAAA,KAAHA,GAAG;AA8BZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}