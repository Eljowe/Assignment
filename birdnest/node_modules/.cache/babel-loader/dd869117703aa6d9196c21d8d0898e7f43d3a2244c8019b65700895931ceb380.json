{"ast":null,"code":"var _jsxFileName = \"C:\\\\Koodi\\\\Reaktor\\\\Reaktor\\\\birdnest\\\\src\\\\components\\\\DroneListItem.js\";\nimport React from \"react\";\nimport DroneService from \"../services/DroneService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DroneListItem = _ref => {\n  let {\n    droneData,\n    drone\n  } = _ref;\n  if (droneData[drone].pilotInformation) {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [droneData[drone].serialNumber, \" distance to nest: \", Math.round(droneData[drone].closestToNest / 1000), droneData[drone].pilotInformation]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [droneData[drone].serialNumber, \" distance to nest: \", Math.round(droneData[drone].closestToNest / 1000)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_c = DroneListItem;\nexport default DroneListItem;\nvar _c;\n$RefreshReg$(_c, \"DroneListItem\");","map":{"version":3,"names":["React","DroneService","DroneListItem","droneData","drone","pilotInformation","serialNumber","Math","round","closestToNest"],"sources":["C:/Koodi/Reaktor/Reaktor/birdnest/src/components/DroneListItem.js"],"sourcesContent":["import React from \"react\";\r\nimport DroneService from \"../services/DroneService\";\r\n\r\nconst DroneListItem = ({droneData, drone}) => {\r\n    if (droneData[drone].pilotInformation) {\r\n        return(\r\n            <li>\r\n                <div>\r\n                    {droneData[drone].serialNumber} distance to nest: {Math.round((droneData[drone].closestToNest)/1000)}\r\n                    {droneData[drone].pilotInformation}\r\n                </div>\r\n            </li>\r\n        )\r\n    }\r\n    return(\r\n        <li>\r\n            <div>\r\n                {droneData[drone].serialNumber} distance to nest: {Math.round((droneData[drone].closestToNest)/1000)}\r\n            </div>\r\n        </li>\r\n    )\r\n    };\r\n\r\nexport default DroneListItem;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,0BAA0B;AAAC;AAEpD,MAAMC,aAAa,GAAG,QAAwB;EAAA,IAAvB;IAACC,SAAS;IAAEC;EAAK,CAAC;EACrC,IAAID,SAAS,CAACC,KAAK,CAAC,CAACC,gBAAgB,EAAE;IACnC,oBACI;MAAA,uBACI;QAAA,WACKF,SAAS,CAACC,KAAK,CAAC,CAACE,YAAY,yBAAqBC,IAAI,CAACC,KAAK,CAAEL,SAAS,CAACC,KAAK,CAAC,CAACK,aAAa,GAAE,IAAI,CAAC,EACnGN,SAAS,CAACC,KAAK,CAAC,CAACC,gBAAgB;MAAA;QAAA;QAAA;QAAA;MAAA;IAChC;MAAA;MAAA;MAAA;IAAA,QACL;EAEb;EACA,oBACI;IAAA,uBACI;MAAA,WACKF,SAAS,CAACC,KAAK,CAAC,CAACE,YAAY,yBAAqBC,IAAI,CAACC,KAAK,CAAEL,SAAS,CAACC,KAAK,CAAC,CAACK,aAAa,GAAE,IAAI,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA;EAClG;IAAA;IAAA;IAAA;EAAA,QACL;AAET,CAAC;AAAC,KAlBAP,aAAa;AAoBnB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}