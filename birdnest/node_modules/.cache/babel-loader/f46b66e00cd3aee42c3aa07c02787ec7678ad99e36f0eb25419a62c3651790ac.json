{"ast":null,"code":"var _jsxFileName = \"C:\\\\Koodi\\\\Reaktor\\\\Reaktor\\\\birdnest\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport DroneService from \"./services/DroneService\";\nimport XMLParser from 'react-xml-parser';\nimport ListComponent from \"./components/ListDrones\";\nimport FilterInsideNDZ from \"./components/FilterByDistance\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [droneData, setDroneData] = useState('');\n  const [insideNDZ, setInsideNDZ] = useState({});\n  useEffect(() => {\n    const updateDroneData = setInterval(() => {\n      DroneService.DroneData().then(response => {\n        var xml = new XMLParser().parseFromString(response); //Response XML-data to array\n        setDroneData(xml.children['1'].children); //set list of drones to variable\n      });\n    }, 2000); //Loop every 2 seconds to fetch current drone positions\n    return () => {\n      clearInterval(updateDroneData);\n    };\n  }, []);\n  FilterInsideNDZ(droneData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Drones\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListComponent, {\n      droneData: droneData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"zLLwibJqe7lCjKwEXMghjYA4mQY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","DroneService","XMLParser","ListComponent","FilterInsideNDZ","App","droneData","setDroneData","insideNDZ","setInsideNDZ","updateDroneData","setInterval","DroneData","then","response","xml","parseFromString","children","clearInterval"],"sources":["C:/Koodi/Reaktor/Reaktor/birdnest/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from 'axios'\nimport DroneService from \"./services/DroneService\";\nimport XMLParser from 'react-xml-parser';\nimport ListComponent from \"./components/ListDrones\";\nimport FilterInsideNDZ from \"./components/FilterByDistance\";\n\nfunction App() {\n  const [droneData, setDroneData] = useState('');\n  const [insideNDZ, setInsideNDZ] = useState({})\n\n  useEffect(() => {\n    const updateDroneData = setInterval(()=> {\n      DroneService.DroneData().then(response => {\n        var xml = new XMLParser().parseFromString(response) //Response XML-data to array\n        setDroneData(xml.children['1'].children); //set list of drones to variable\n      })\n    }, 2000); //Loop every 2 seconds to fetch current drone positions\n    return () => {\n    clearInterval(updateDroneData);\n    };\n  }, []);\n\n  FilterInsideNDZ(droneData);\n  return (\n    <div>\n      <p>Drones</p>\n      <ListComponent droneData={droneData}/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,yBAAyB;AAClD,OAAOC,SAAS,MAAM,kBAAkB;AACxC,OAAOC,aAAa,MAAM,yBAAyB;AACnD,OAAOC,eAAe,MAAM,+BAA+B;AAAC;AAE5D,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMY,eAAe,GAAGC,WAAW,CAAC,MAAK;MACvCV,YAAY,CAACW,SAAS,EAAE,CAACC,IAAI,CAACC,QAAQ,IAAI;QACxC,IAAIC,GAAG,GAAG,IAAIb,SAAS,EAAE,CAACc,eAAe,CAACF,QAAQ,CAAC,EAAC;QACpDP,YAAY,CAACQ,GAAG,CAACE,QAAQ,CAAC,GAAG,CAAC,CAACA,QAAQ,CAAC,CAAC,CAAC;MAC5C,CAAC,CAAC;IACJ,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IACV,OAAO,MAAM;MACbC,aAAa,CAACR,eAAe,CAAC;IAC9B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAENN,eAAe,CAACE,SAAS,CAAC;EAC1B,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAa,eACb,QAAC,aAAa;MAAC,SAAS,EAAEA;IAAU;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QAClC;AAEV;AAAC,GAvBQD,GAAG;AAAA,KAAHA,GAAG;AAyBZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}