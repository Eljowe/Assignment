{"ast":null,"code":"import _regeneratorRuntime from\"C:/Koodi/Reaktor/Reaktor/birdnest/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Koodi/Reaktor/Reaktor/birdnest/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import axios from'axios';import FilterController from\"../components/FilterController\";var XMLDroneData=function XMLDroneData(){//GET request to fetch drone data\nvar res=axios//the XML data is fetched from custom proxy, due to CORS-policy\n.get('https://droneproxy.fly.dev/https://assignments.reaktor.com/birdnest/drones').catch(function(error){console.log(error);return{};});return res.then(function(response){return response.data;});};var PilotInformation=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(serialNumber){var res;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(\"https://droneproxy.fly.dev/https://assignments.reaktor.com/birdnest/pilots/\".concat(serialNumber)).catch(function(error){console.log(error);return{};});case 2:res=_context.sent;_context.next=5;return res.data;case 5:return _context.abrupt(\"return\",_context.sent);case 6:case\"end\":return _context.stop();}}},_callee);}));return function PilotInformation(_x){return _ref.apply(this,arguments);};}();var DroneDataObject=function DroneDataObject(droneData,time){//Creates more coherent drone object for easier data handling (perhaps some other XML to Json library would've done this automatically)\nvar obj=[];Object.keys(droneData).map(function(drone){return obj.push({serialNumber:droneData[drone].children['0'].value,closestToNest:FilterController.distanceToNest(droneData,drone),lastSeen:time,timeOnList:null,x:droneData[drone].children['8'].value,y:droneData[drone].children['7'].value,pilotInformation:null});});return obj;};export default{XMLDroneData:XMLDroneData,DroneDataObject:DroneDataObject,PilotInformation:PilotInformation};","map":{"version":3,"names":["axios","FilterController","XMLDroneData","res","get","catch","error","console","log","then","response","data","PilotInformation","serialNumber","DroneDataObject","droneData","time","obj","Object","keys","map","drone","push","children","value","closestToNest","distanceToNest","lastSeen","timeOnList","x","y","pilotInformation"],"sources":["C:/Koodi/Reaktor/Reaktor/birdnest/src/services/DroneService.js"],"sourcesContent":["import axios from 'axios'\r\nimport FilterController from \"../components/FilterController\";\r\n\r\nconst XMLDroneData = () => { //GET request to fetch drone data\r\n  const res = axios //the XML data is fetched from custom proxy, due to CORS-policy\r\n    .get('https://droneproxy.fly.dev/https://assignments.reaktor.com/birdnest/drones')\r\n    .catch(function (error) { \r\n      console.log(error);\r\n      return {};\r\n    });\r\n    return res.then(response => response.data);\r\n};\r\n\r\nconst PilotInformation = async (serialNumber) => { //GET request to fetch pilot information\r\n  const res = await axios\r\n    .get(`https://droneproxy.fly.dev/https://assignments.reaktor.com/birdnest/pilots/${serialNumber}`)\r\n    .catch(function (error) { \r\n      console.log(error);\r\n      return {};\r\n    });\r\n    return await res.data;\r\n};\r\n\r\nconst DroneDataObject = (droneData, time) => { //Creates more coherent drone object for easier data handling (perhaps some other XML to Json library would've done this automatically)\r\n  const obj = []\r\n  Object.keys(droneData).map(drone => \r\n    obj.push(\r\n      {\r\n        serialNumber: droneData[drone].children['0'].value,\r\n        closestToNest: FilterController.distanceToNest(droneData, drone),\r\n        lastSeen: time,\r\n        timeOnList: null,\r\n        x: droneData[drone].children['8'].value,\r\n        y: droneData[drone].children['7'].value,\r\n        pilotInformation: null\r\n      }\r\n    )\r\n  )\r\n  return obj;\r\n};\r\n\r\nexport default {\r\n  XMLDroneData: XMLDroneData,\r\n  DroneDataObject: DroneDataObject,\r\n  PilotInformation: PilotInformation\r\n};"],"mappings":"8PAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,MAAOC,iBAAgB,KAAM,gCAAgC,CAE7D,GAAMC,aAAY,CAAG,QAAfA,aAAY,EAAS,CAAE;AAC3B,GAAMC,IAAG,CAAGH,KAAM;AAAA,CACfI,GAAG,CAAC,4EAA4E,CAAC,CACjFC,KAAK,CAAC,SAAUC,KAAK,CAAE,CACtBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAClB,MAAO,CAAC,CAAC,CACX,CAAC,CAAC,CACF,MAAOH,IAAG,CAACM,IAAI,CAAC,SAAAC,QAAQ,QAAIA,SAAQ,CAACC,IAAI,GAAC,CAC9C,CAAC,CAED,GAAMC,iBAAgB,4FAAG,iBAAOC,YAAY,kJACxBb,MAAK,CACpBI,GAAG,sFAA+ES,YAAY,EAAG,CACjGR,KAAK,CAAC,SAAUC,KAAK,CAAE,CACtBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAClB,MAAO,CAAC,CAAC,CACX,CAAC,CAAC,QALEH,GAAG,qCAMMA,IAAG,CAACQ,IAAI,6GACxB,kBARKC,iBAAgB,4CAQrB,CAED,GAAME,gBAAe,CAAG,QAAlBA,gBAAe,CAAIC,SAAS,CAAEC,IAAI,CAAK,CAAE;AAC7C,GAAMC,IAAG,CAAG,EAAE,CACdC,MAAM,CAACC,IAAI,CAACJ,SAAS,CAAC,CAACK,GAAG,CAAC,SAAAC,KAAK,QAC9BJ,IAAG,CAACK,IAAI,CACN,CACET,YAAY,CAAEE,SAAS,CAACM,KAAK,CAAC,CAACE,QAAQ,CAAC,GAAG,CAAC,CAACC,KAAK,CAClDC,aAAa,CAAExB,gBAAgB,CAACyB,cAAc,CAACX,SAAS,CAAEM,KAAK,CAAC,CAChEM,QAAQ,CAAEX,IAAI,CACdY,UAAU,CAAE,IAAI,CAChBC,CAAC,CAAEd,SAAS,CAACM,KAAK,CAAC,CAACE,QAAQ,CAAC,GAAG,CAAC,CAACC,KAAK,CACvCM,CAAC,CAAEf,SAAS,CAACM,KAAK,CAAC,CAACE,QAAQ,CAAC,GAAG,CAAC,CAACC,KAAK,CACvCO,gBAAgB,CAAE,IACpB,CAAC,CACF,GACF,CACD,MAAOd,IAAG,CACZ,CAAC,CAED,cAAe,CACbf,YAAY,CAAEA,YAAY,CAC1BY,eAAe,CAAEA,eAAe,CAChCF,gBAAgB,CAAEA,gBACpB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}