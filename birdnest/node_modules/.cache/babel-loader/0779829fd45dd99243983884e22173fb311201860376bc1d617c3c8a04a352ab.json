{"ast":null,"code":"import React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport XMLParser from 'react-xml-parser';\nimport FilterByDistance from \"../components/FilterByDistance\";\n\n//https://droneproxy.fly.dev/https://assignments.reaktor.com/birdnest/drones'\n//https://damp-oasis-94494.herokuapp.com/assignments.reaktor.com/birdnest/drones\nconst DroneData = () => {\n  const res = axios.get('https://droneproxy.fly.dev/https://assignments.reaktor.com/birdnest/drones', {\n    \"Content-Type\": \"application/xml; charset=utf-8\"\n  });\n  return res.then(response => response.data);\n};\n_c = DroneData;\nconst DroneDataObject = (droneData, time) => {\n  const obj = [];\n  Object.keys(droneData).map(drone => obj.push({\n    serialNumber: droneData[drone].children['0'].value,\n    closestToNest: FilterByDistance.distanceToNest(droneData, drone),\n    firstSeen: time\n  }));\n  console.log(obj);\n};\n_c2 = DroneDataObject;\nexport default {\n  DroneData: DroneData,\n  DroneDataObject: DroneDataObject\n};\nvar _c, _c2;\n$RefreshReg$(_c, \"DroneData\");\n$RefreshReg$(_c2, \"DroneDataObject\");","map":{"version":3,"names":["React","useEffect","useState","axios","XMLParser","FilterByDistance","DroneData","res","get","then","response","data","DroneDataObject","droneData","time","obj","Object","keys","map","drone","push","serialNumber","children","value","closestToNest","distanceToNest","firstSeen","console","log"],"sources":["C:/Koodi/Reaktor/Reaktor/birdnest/src/services/DroneService.js"],"sourcesContent":["import React ,{ useEffect, useState} from \"react\";\r\nimport axios from 'axios'\r\nimport XMLParser from 'react-xml-parser';\r\nimport FilterByDistance from \"../components/FilterByDistance\";\r\n\r\n//https://droneproxy.fly.dev/https://assignments.reaktor.com/birdnest/drones'\r\n//https://damp-oasis-94494.herokuapp.com/assignments.reaktor.com/birdnest/drones\r\nconst DroneData = () => {\r\n  const res = axios\r\n    .get('https://droneproxy.fly.dev/https://assignments.reaktor.com/birdnest/drones',\r\n    {\r\n      \"Content-Type\": \"application/xml; charset=utf-8\"\r\n    });\r\n    return res.then(response => response.data);\r\n};\r\n\r\nconst DroneDataObject = (droneData, time) => {\r\n  const obj = []\r\n  Object.keys(droneData).map(drone => \r\n    obj.push(\r\n      {\r\n        serialNumber: droneData[drone].children['0'].value,\r\n        closestToNest: FilterByDistance.distanceToNest(droneData, drone),\r\n        firstSeen: time\r\n      }\r\n    )\r\n  )\r\n  console.log(obj)\r\n};\r\n\r\nexport default {\r\n  DroneData: DroneData,\r\n  DroneDataObject: DroneDataObject\r\n};"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACjD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,kBAAkB;AACxC,OAAOC,gBAAgB,MAAM,gCAAgC;;AAE7D;AACA;AACA,MAAMC,SAAS,GAAG,MAAM;EACtB,MAAMC,GAAG,GAAGJ,KAAK,CACdK,GAAG,CAAC,4EAA4E,EACjF;IACE,cAAc,EAAE;EAClB,CAAC,CAAC;EACF,OAAOD,GAAG,CAACE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC;AAC9C,CAAC;AAAC,KAPIL,SAAS;AASf,MAAMM,eAAe,GAAG,CAACC,SAAS,EAAEC,IAAI,KAAK;EAC3C,MAAMC,GAAG,GAAG,EAAE;EACdC,MAAM,CAACC,IAAI,CAACJ,SAAS,CAAC,CAACK,GAAG,CAACC,KAAK,IAC9BJ,GAAG,CAACK,IAAI,CACN;IACEC,YAAY,EAAER,SAAS,CAACM,KAAK,CAAC,CAACG,QAAQ,CAAC,GAAG,CAAC,CAACC,KAAK;IAClDC,aAAa,EAAEnB,gBAAgB,CAACoB,cAAc,CAACZ,SAAS,EAAEM,KAAK,CAAC;IAChEO,SAAS,EAAEZ;EACb,CAAC,CACF,CACF;EACDa,OAAO,CAACC,GAAG,CAACb,GAAG,CAAC;AAClB,CAAC;AAAC,MAZIH,eAAe;AAcrB,eAAe;EACbN,SAAS,EAAEA,SAAS;EACpBM,eAAe,EAAEA;AACnB,CAAC;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}